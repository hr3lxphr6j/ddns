name: Rust

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: cargo test --verbose
      - name: Build
        run: cargo build --verbose
  build:
    needs:
      - test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - i686-pc-windows-gnu
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    steps:
    - run: sudo apt-get install -y pkg-config librust-openssl-dev librust-openssl-probe-dev librust-openssl-sys-dev
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target ${{ matrix.target }}
  docker-image:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.5.1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build the Docker image
        uses: docker/build-push-action@v2.6.1
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: chigusa/ddns:master
